(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{116:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(n),h=a,b=m["".concat(o,".").concat(h)]||m[h]||p[h]||i;return n?r.a.createElement(b,c(c({ref:t},l),{},{components:n})):r.a.createElement(b,c({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(6),i=(n(0),n(116)),o={title:"Website Implementation and documentation checklist",sidebar_label:"Website Implementation and documentation checklist"},c={unversionedId:"kb/website-checklist",id:"kb/website-checklist",isDocsHomePage:!1,title:"Website Implementation and documentation checklist",description:"The purpose of this checklist is to provide the set of tasks that have to be followed as a base for each of the website proxy implementation and a list of the expected deliverables from each team. This implementation checklist is for the SOW flavour//github.com/filetrust/icap-infrastructure)",source:"@site/docs/kb/website-checklist.md",slug:"/kb/website-checklist",permalink:"/k8-proxy-documentation/docs/kb/website-checklist",version:"current",sidebar_label:"Website Implementation and documentation checklist",sidebar:"someSidebar",previous:{title:"Style Guide",permalink:"/k8-proxy-documentation/docs/kb/style-guide"}},s=[{value:"Implementation checklist",id:"implementation-checklist",children:[]},{value:"Documentation checklist",id:"documentation-checklist",children:[]}],l={rightToc:s};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The purpose of this checklist is to provide the set of tasks that have to be followed as a base for each of the website proxy implementation and a list of the expected deliverables from each team. This implementation checklist is for the SOW flavour: (",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/filetrust/icap-infrastructure"}),"https://github.com/filetrust/icap-infrastructure"),")"),Object(i.b)("h2",{id:"implementation-checklist"},"Implementation checklist"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Review the assigned website, review the structure of it, and if auth is required or not."),Object(i.b)("li",{parentName:"ul"},"Programmatically install the website to a live EC2 server and make/request the necessary DNS changes"),Object(i.b)("li",{parentName:"ul"},"Make sure that the EC2 instance is having a persistent IP."),Object(i.b)("li",{parentName:"ul"},"Protect the website using instructions from ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/filetrust/icap-infrastructure"}),"https://github.com/filetrust/icap-infrastructure")," -These steps are for docker implementation, Kubernetes engine, and adaptation service. The work done here can be used as a reference."),Object(i.b)("li",{parentName:"ul"},"Test the initial setup by downloading a PDF and making sure that it is Glasswall Processed."),Object(i.b)("li",{parentName:"ul"},"Create a how-to install demo and share it in the slack channel."),Object(i.b)("li",{parentName:"ul"},"Share with the team for more testing - QA team should use a suite of tests to generate traffic."),Object(i.b)("li",{parentName:"ul"},"Create AMI and release for the implementation.")),Object(i.b)("h2",{id:"documentation-checklist"},"Documentation checklist"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Update readme instructions - include any specific changes/customizations that were done for the website."),Object(i.b)("li",{parentName:"ul"},"Document basic information: IP, ports opened (ICAP port should be opened), engine version, OS, infrastructure, provisioning, container engine. - In JSON file (additional instructions to be added)"),Object(i.b)("li",{parentName:"ul"},"Create end to end demo video and share in the slack channel"),Object(i.b)("li",{parentName:"ul"},"PM to share the results from QA and traffic metrics generated"),Object(i.b)("li",{parentName:"ul"},"Create an architecture diagram (either in the normal visio/draw.io mode or ideally in plantuml) - this will show the multiple components and how everything fits together"),Object(i.b)("li",{parentName:"ul"},"Create dataflow/sequence diagrams (using something like ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://mermaid-js.github.io/mermaid/diagrams-and-syntax-and-examples/sequenceDiagram.html"}),"https://mermaid-js.github.io/mermaid/diagrams-and-syntax-and-examples/sequenceDiagram.html")," or ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://plantuml.com/sequence-diagram"}),"https://plantuml.com/sequence-diagram"),") which will show the sequence of events and how the data is moved across the system"),Object(i.b)("li",{parentName:"ul"},"Update the assigned Wardley maps showing the maturity level of each components ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://miro.com/app/board/o9J_kgg3ft0=/"}),"https://miro.com/app/board/o9J_kgg3ft0=/"))))}u.isMDXComponent=!0}}]);